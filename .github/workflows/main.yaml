name: Android CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '*'

env:
  HOME: '/home/runner/.config'

jobs:
  setup:

    runs-on: ubuntu-latest

    outputs:
      android-home: ${{ steps.android-setup.outputs.android-home }}
      java-home: ${{ steps.java-setup.outputs.java-home }}
      emulator-id: ${{ steps.create-emulator.outputs.emulator-id }}

    steps:
      
    - name: Checkout the code
      uses: actions/checkout@v3

    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Install Additional packages - emulator
      run: sdkmanager emulator

    - name: Install additional packages - platform-tools
      run: sdkmanager platform-tools

    - name: Install libpulse
      run: sudo apt -y install libpulse-dev

    - name: Install and add user to kvm
      run: sudo apt-get update
    - run: sudo apt install qemu-kvm
    - run: sudo apt install virt-manager

    #- run: egrep -c '(vmx|svm)' /proc/cpuinfo
    #- run: kvm-ok 
    - name: Enable KVM group perms
      run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
    
    - run: sudo adduser $USER kvm

    - run: sudo chown $USER /dev/kvm 

    - name: Install System Image
      run: sdkmanager --install 'system-images;android-30;google_apis_playstore;x86_64'

    - name: Create emulator
      run: echo "no" |
        avdmanager create avd -n TestAVD -k "system-images;android-30;google_apis_playstore;x86_64"
        echo "::set-output name=emulator-id::TestAVD"

    - run: echo "::set-output name=android-home::$ANDROID_HOME"
    - run: echo "::set-output name=java-home::$JAVA_HOME"

  heap_memory_usage:
  
    runs-on: ubuntu-latest
    name: Heap memory profiling
    needs: setup

    env:
       ANDROID_HOME: ${{ needs.setup.outputs.android-home }}
       JAVA_HOME: ${{ needs.setup.outputs.java-home }}
       EMULATOR_ID: ${{ needs.create-emulator.outputs.emulator-id }}

    steps:
          
      - uses: actions/checkout@master
  
      - name: Launch Emulator
      #run: $ANDROID_HOME/emulator/emulator -avd TestAVD -no-audio &
        run: |       
          echo "Starting emulator and waiting for boot to complete...."
          #ls -la $ANDROID_HOME/emulator
          $ANDROID_HOME/emulator/emulator -avd $EMULATOR_ID -no-skin -no-audio -no-window &
          $ANDROID_HOME/platform-tools/adb wait-for-device 
          echo "Emulator has finished booting"
          adb devices
        
      - name: Boot emulator
        run: adb shell getprop sys.boot_completed
  
      - name: Install App
        run: |
          ./gradlew installDebug
          
      - name: Launch app
        run: |
          sleep 2
          ./adb shell am start -n com.example.githubactionssampleproject3/com.example.githubactionssampleproject3.MainActivity
    
      - name: Print heap memory usage\
        run: |
          sleep 2
          chmod +x ./Scripts/heap_memory_usage.sh
          bash ./Scripts/heap_memory_usage.sh
